/*
 * Copyright (c) 2022 Pete Johanson
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define BAS_L 0
#define NAV_L 1
#define NUM_L 2
#define SYM_L 3

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace

&lt { quick_tap_ms = <200>; };

/ {
    chosen { zmk,matrix_transform = &ortho_transform; };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    combos {
        compatible = "zmk,combos";

        rbkt {
            bindings = <&kp RBKT>;
            key-positions = <7 8>;
        };

        lbkt {
            bindings = <&kp LBKT>;
            key-positions = <4 3>;
        };

        esc {
            bindings = <&kp ESC>;
            key-positions = <1 2>;
        };

        bspc {
            bindings = <&kp BSPC>;
            key-positions = <20 21>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <25 26>;
        };

        enter {
            bindings = <&kp ENTER>;
            key-positions = <33 34>;
        };
    };

    behaviors {
        nk: no_so_sticky_key {
            compatible = "zmk,behavior-hold-tap";
            label = "NO_SO_STICKY_KEY";
            bindings = <&kp>, <&sk>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };

        sh: sticky_hold {
            compatible = "zmk,behavior-hold-tap";
            label = "STICKY_HOLD";
            bindings = <&mo>, <&sl>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
        };

        mo_tap: mo_with_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "MO_WITH_TAP";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <0>;
            retro-tap;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            label = "Base";
            bindings = <
&kp Q  &kp W  &kp E     &kp R    &kp T            &kp GRAVE             &kp BSPC         &kp Y  &kp U      &kp I      &kp O    &kp P
&kp A  &kp S  &kp D     &kp F    &kp G            &mt LCTRL ESC         &kp SQT          &kp H  &kp J      &kp K      &kp L    &kp SEMI
&kp Z  &kp X  &kp C     &kp V    &kp B            &kp BSLH              &kp RET          &kp N  &kp M      &kp COMMA  &kp DOT  &kp FSLH
              &kp LCMD  &sh 1 1  &mo_tap 1 SPACE  &none          &none  &sk RIGHT_SHIFT  &mo 2  &kp RCTRL
            >;
        };

        navigation {
            label = "Nav";
            bindings = <
&kp ESC                    &none                  &none              &none            &none         &none                 &none        &kp TAB   &none      &none      &none      &kp DEL
&nk LEFT_SHIFT LEFT_SHIFT  &nk LEFT_WIN LEFT_WIN  &nk LEFT_ALT LALT  &nk LCTRL LCTRL  &none         &none                 &none        &kp LEFT  &kp DOWN   &kp UP     &kp RIGHT  &kp BACKSPACE
&bt BT_CLR                 &bt BT_SEL 0           &bt BT_SEL 1       &bt BT_SEL 2     &bt BT_SEL 3  &bt BT_SEL 4          &bootloader  &kp HOME  &kp PG_DN  &kp PG_UP  &kp END    &trans
                                                  &trans             &trans           &trans        &trans        &trans  &trans       &trans    &trans
            >;
        };

        symbols {
            bindings = <
&kp EXCLAMATION  &kp AT            &kp HASH         &kp DOLLAR             &kp PERCENT        &trans          &trans  &kp LCTRL  &kp AMPERSAND  &kp ASTERISK  &kp UNDERSCORE  &trans
&kp GRAVE        &kp TILDE         &kp LEFT_BRACE   &kp LEFT_PARENTHESIS   &kp LEFT_BRACKET   &trans          &trans  &trans     &nk RCTRL RCTRL &nk RALT RALT &nk RWIN RWIN &nk RSHIFT RSHIFT  
&kp LESS_THAN    &kp GREATER_THAN  &kp RIGHT_BRACE  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACKET  &trans          &trans  &kp PIPE   &kp MINUS      &kp PLUS      &kp EQUAL       &kp NON_US_BACKSLASH
                                   &trans           &trans                 &trans             &trans  &trans  &trans  &trans     &trans
            >;

            label = "sym";
        };

        numbers {
            bindings = <
&kp F1   &kp F2   &kp F3  &kp F4  &kp F5  &trans          &trans  &kp FSLH   &kp N7  &kp N8  &kp N9  &kp F12
&nk LEFT_SHIFT LEFT_SHIFT  &nk LEFT_WIN LEFT_WIN  &nk LEFT_ALT LALT  &nk LCTRL LCTRL  &kp F6  &trans          &trans  &kp EQUAL  &kp N4  &kp N5  &kp N6  &trans
&kp F11  &kp F10  &kp F9  &kp F8  &kp F7  &trans          &trans  &kp N0     &kp N1  &kp N2  &kp N3  &kp DOT
                  &trans  &trans  &trans  &trans  &trans  &trans  &trans     &trans
            >;

            label = "num";
        };
    };
};
